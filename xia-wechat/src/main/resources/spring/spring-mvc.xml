<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<bean class="cn.zhyonk.common.SwaggerConfig"></bean>
	<mvc:default-servlet-handler />
	<mvc:resources mapping="swagger-ui.html"
		location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />
	<!-- Controller包(自动注入) -->
	<context:component-scan base-package="cn.zhyonk.wechat.*.*" />
	

	<!-- FastJson注入 -->
	<mvc:annotation-driven>
		<mvc:message-converters
			register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<!-- JacksonJson -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 静态资源配置 -->
	<mvc:resources mapping="/resources/**"
		location="/resources/" />
<!-- 	<mvc:interceptors>    
	
    <mvc:interceptor>    
        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
        <mvc:mapping path="/**" />  
        /register 和 /login 不需要拦截  
        <mvc:exclude-mapping path="/register" />
        <mvc:exclude-mapping path="/*/login" />
        <bean class="cn.zhyonk.interceptor.LoginInterceptor"></bean>    
    </mvc:interceptor>  
    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
    </mvc:interceptors>  -->

	<bean class="cn.zhyonk.common.utils.SpringContextHolder"  lazy-init="false"/>
	<!-- 对模型视图名称的解析,即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 上传限制 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件大小限制为31M，31*1024*1024 -->
		<property name="maxUploadSize" value="32505856" />
	</bean>
	
	<!-- 开启shiro注解-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

</beans>